%D \module
%D   [       file=strc-pag,
%D        version=2008.10.20,
%D          title=\CONTEXT\ Structure Macros,
%D       subtitle=Pagenumbering,
%D         author=Hans Hagen,
%D           date=\currentdate,
%D      copyright=PRAGMA-ADE / Hans Hagen]
%C
%C This module is part of the \CONTEXT\ macro||package and is
%C therefore copyrighted by \PRAGMA. See mreadme.pdf for
%C details.

\writestatus{loading}{ConTeXt Structure Macros / Pagenumbering}

\registerctxluafile{strc-pag}{1.001}

\unprotect

% Hacks:

\let\preparepageprefix\gobbleoneargument
\let\checkrealpage    \relax
\let\checksubpages    \relax
\let\setpagecounters  \relax

% Allocation:

\countdef\realpageno = 0  \realpageno = 1
\countdef\userpageno = 1  \userpageno = 1
\countdef\subpageno  = 2  \subpageno  = 0 % !!
\countdef\arrangeno  = 3  \arrangeno  = 0 % !!

\let\pageno\userpageno

\def\realfolio{\the\realpageno}
\def\userfolio{\the\userpageno}
\def\subfolio {\the\subpageno }

\newtoks\everyinitializepagecounters

\def\initializepagecounters{\the\everyinitializepagecounters}

\appendtoks
  \initializepagecounters
\to \everyjob

% Page numbers are kind of independent of each other and therefore they
% all get their own counter. After all, it's easier to combine them in
% a pseudo counterset than to deal with a complex set itself.

% \definestructureprefixset   [mine][section-1,section-2]
% \definestructureseparatorset[mine][:]
%
% \setupuserpagenumber
%   [way=bypart,
%    prefix=yes,
%    prefixset=mine,
%    prefixseparatorset=mine]

\definestructurecounter[\s!realpage][\c!prefix=\v!no,\c!start=1,\c!prefixsegments=] % [\s!counter=0]
\definestructurecounter[\s!userpage][\c!prefix=\v!no,\c!start=1,\c!prefixsegments=] % [\s!counter=1]
\definestructurecounter[\s!subpage] [\c!prefix=\v!no,\c!start=1,\c!prefixsegments=] % [\s!counter=2]

\newtoks\everysetuprealpagenumber % todo: set state: none, start, stop, reset
\newtoks\everysetupuserpagenumber % todo: set state: none, start, stop, reset
\newtoks\everysetupsubpagenumber  % todo: set state: none, start, stop, reset

\def\setuprealpagenumber{\dosingleargument\dosetuprealpagenumber}
\def\setupuserpagenumber{\dosingleargument\dosetupuserpagenumber}
\def\setupsubpagenumber {\dosingleargument\dosetupsubpagenumber}

\def\dosavepagenumberstate#1{\edef\oldpagenumberstate{\structurecounterparameter#1\c!state}}

\def\dosetuprealpagenumber[#1]{\dosavepagenumberstate\s!realpage\dosetupstructurecounter[\s!realpage][#1]\the\everysetuprealpagenumber}
\def\dosetupuserpagenumber[#1]{\dosavepagenumberstate\s!userpage\dosetupstructurecounter[\s!userpage][#1]\the\everysetupuserpagenumber}
\def\dosetupsubpagenumber [#1]{\dosavepagenumberstate\s!subpage \dosetupstructurecounter[\s!subpage ][#1]\the\everysetupsubpagenumber }

\def\resetrealpagenumber {} % not permitted
\def\resetuserpagenumber {\resetstructurecounter[\s!userpage]}
\def\resetsubpagenumber  {\resetstructurecounter[\s!subpage]}

\appendtoks
    \setstructurecounter[\s!realpage]\realpageno
    \setstructurecounter[\s!userpage]\userpageno
    \setstructurecounter[\s!subpage] \subpageno
\to \everyinitializepagecounters

\let\setuppagenumber\setupuserpagenumber
\let\resetpagenumber\resetuserpagenumber

%      {
%        prefix        = "\structurecounterparameter{#1}\c!prefix",
%        separatorset  = "\structurecounterparameter{#1}\c!prefixseparatorset",
%        conversion    = "\structurecounterparameter{#1}\c!prefixconversion",
%        conversionset = "\structurecounterparameter{#1}\c!prefixconversionset",
%        stopper       = \!!bs\structurecounterparameter{#1}\c!prefixstopper\!!es,
%        set           = "\structurecounterparameter{#1}\c!prefixset",
%        segments      = "\structurecounterparameter{#1}\c!prefixsegments",
%        connector     = \!!bs\structurecounterparameter{#1}\c!prefixconnector\!!es,
%      },
%      {
%        order         = "\structurecounterparameter{#1}\c!numberorder",
%        separatorset  = "\structurecounterparameter{#1}\c!numberseparatorset",
%        conversion    = "\structurecounterparameter{#1}\c!numberconversion",
%        conversionset = "\structurecounterparameter{#1}\c!numberconversionset",
%        stopper       = \!!bs\structurecounterparameter{#1}\c!numberstopper\!!es,
%        segments      = "\structurecounterparameter{#1}\c!numbersegments",
%        type          = "\structurecounterparameter{#1}\c!type",
%      }

\def\savecurrentpagestate
  {\ctxlua{structure.pages.save {
        prefix        = "\structurecounterparameter\s!userpage\c!prefix",
        separatorset  = "\structurecounterparameter\s!userpage\c!prefixseparatorset",
        conversion    = "\structurecounterparameter\s!userpage\c!prefixconversion",
        conversionset = "\structurecounterparameter\s!userpage\c!prefixconversionset",
        set           = "\structurecounterparameter\s!userpage\c!prefixset",
        stopper       = \!!bs\structurecounterparameter\s!userpage\c!prefixstopper\!!es,
        segments      = "\structurecounterparameter\s!userpage\c!prefixsegments",
        connector     = \!!bs\structurecounterparameter\s!userpage\c!prefixconnector\!!es,
    }}}

\prependtoks
    \savecurrentpagestate
\to \everyshipout

\def\pushpagestate{\setxvalue{\??nm:\s!userpage:\c!state}{\structurecounterparameter\s!userpage\c!state}}
\def\poppagestate {\normalexpanded{\noexpand\setuppagenumber[\c!state=\getvalue{\??nm:\s!userpage:\c!state}]}}

\setuppagenumber
  [\c!way=\v!by\v!text,
   \c!prefix=\v!no,
   \c!prefixset=\v!part,
   \c!prefixconnector=\endash,
   \c!state=\v!start]

\setupsubpagenumber
  [\c!way=\v!by\v!part,
   \c!state=\v!stop]

% We don't want conflicts when \type {\pageno} is used by other
% packages, like \CWEB, so we redefine \type {\pageno}.

\newcount\pageno \pageno\userpageno \let\folio\userfolio

\appendtoks
    \global\pageno\userpageno
\to \everyinitializepagecounters

% Counters

% \def\firstpage    {1} \def\prevpage    {1} \def\nextpage    {1} \def\lastpage    {1}
% \def\firstuserpage{1} \def\prevuserpage{1} \def\nextuserpage{1} \def\lastuserpage{1}
% \def\firstsubpage {1} \def\prevsubpage {1} \def\nextsubpage {1} \def\lastsubpage {1}

% \def\firstrealpage{\firststructurecounter[\s!realpage]}
% \def\prevrealpage {\prevstructurecounter [\s!realpage]}
% \def\nextrealpage {\nextstructurecounter [\s!realpage]}
% \def\lastrealpage {\laststructurecounter [\s!realpage]}

% \let\firstpage\firstrealpage
% \let\prevpage \prevrealpage
% \let\nextpage \nextrealpage
% \let\lastpage \lastrealpage

\def\firstrealpagenumber{\convertedstructurecounter[\s!realpage][\c!type=\v!first]}
\def\firstuserpagenumber{\convertedstructurecounter[\s!userpage][\c!type=\v!first]}
\def\firstsubpagenumber {\convertedstructurecounter[\s!subpage ][\c!type=\v!first]}

\def\lastrealpagenumber {\convertedstructurecounter[\s!realpage][\c!type=\v!last]}
\def\lastuserpagenumber {\convertedstructurecounter[\s!userpage][\c!type=\v!last]}
\def\lastsubpagenumber  {\convertedstructurecounter[\s!subpage ][\c!type=\v!last]}

\def\prevrealpagenumber {\convertedstructurecounter[\s!realpage][\c!type=\v!previous]}
\def\prevuserpagenumber {\convertedstructurecounter[\s!userpage][\c!type=\v!previous]}
\def\prevsubpagenumber  {\convertedstructurecounter[\s!subpage ][\c!type=\v!previous]}

\def\nextrealpagenumber {\convertedstructurecounter[\s!realpage][\c!type=\v!next]}
\def\nextuserpagenumber {\convertedstructurecounter[\s!userpage][\c!type=\v!next]}
\def\nextsubpagenumber  {\convertedstructurecounter[\s!subpage ][\c!type=\v!next]}

\def\firstrealpage{\firststructurecounter[\s!realpage]}
\def\firstuserpage{\firststructurecounter[\s!userpage]}
\def\firstsubpage {\firststructurecounter[\s!subpage ]}

\def\prevrealpage {\prevstructurecounter [\s!realpage]}
\def\prevuserpage {\prevstructurecounter [\s!userpage]}
\def\prevsubpage  {\prevstructurecounter [\s!subpage ]}

\def\nextrealpage {\nextstructurecounter [\s!realpage]}
\def\nextuserpage {\nextstructurecounter [\s!userpage]}
\def\nextsubpage  {\nextstructurecounter [\s!subpage ]}

\def\lastrealpage {\laststructurecounter [\s!realpage]}
\def\lastuserpage {\laststructurecounter [\s!userpage]}
\def\lastsubpage  {\laststructurecounter [\s!subpage ]}

\let\firstpage\firstrealpage
\let\prevpage \prevrealpage
\let\nextpage \nextrealpage
\let\lastpage \lastrealpage

% Compatibility counters:

\def\nofrealpages {\lastrealpage} \def\totalnumberofpages{\lastrealpage}
\def\nofuserpages {\lastuserpage} \def\lastpagenumber    {\lastuserpage}
\def\nofsubpages  {\lastsubpage }

% Renderers:

\def\realpagenumber{\convertedstructurecounter[\s!realpage]}
\def\userpagenumber{\convertedstructurecounter[\s!userpage]}
\def\subpagenumber {\convertedstructurecounter[\s!subpage]}

\def\pagenumber        {\rawstructurecounter[\s!userpage]}
\def\prefixedpagenumber{\convertedstructurecounter[\s!userpage]} % \userpagenumber

\def\firstrealpagenumber{\convertedstructurecounter[\s!realpage][\c!type=\v!first]}
\def\firstuserpagenumber{\convertedstructurecounter[\s!userpage][\c!type=\v!first]}
\def\firstsubpagenumber {\convertedstructurecounter[\s!subpage ][\c!type=\v!first]}

\def\lastrealpagenumber {\convertedstructurecounter[\s!realpage][\c!type=\v!last]}
\def\lastuserpagenumber {\convertedstructurecounter[\s!userpage][\c!type=\v!last]}
\def\lastsubpagenumber  {\convertedstructurecounter[\s!subpage ][\c!type=\v!last]}

\def\prevrealpagenumber {\convertedstructurecounter[\s!realpage][\c!type=\v!previous]}
\def\prevuserpagenumber {\convertedstructurecounter[\s!userpage][\c!type=\v!previous]}
\def\prevsubpagenumber  {\convertedstructurecounter[\s!subpage ][\c!type=\v!previous]}

\def\nextrealpagenumber {\convertedstructurecounter[\s!realpage][\c!type=\v!next]}
\def\nextuserpagenumber {\convertedstructurecounter[\s!userpage][\c!type=\v!next]}
\def\nextsubpagenumber  {\convertedstructurecounter[\s!subpage ][\c!type=\v!next]}

\appendtoks
    \decrementstructurecounter[\s!realpage]%
    \decrementstructurecounter[\s!userpage]%
    \decrementstructurecounter[\s!subpage]%
\to\everygoodbye

% Equivalents (compatibility):
%
% todo: maybe leave lastpage etc lua calls

\def\realpage{\realfolio}
\def\userpage{\userfolio}
\def\subpage {\subfolio}

% Hooks:

\appendtoks
    \xdef\currentpage{\the\realpageno}%
    \ifnum\realpageno>\lastpage \globallet\lastpage\lastrealpage \fi
\to \everyinitializepagecounters

% \def\savenofpages
%   {\global\realpageno\decrementedstructurecounter[\s!realpage]\relax
%    \global\pageno    \decrementedstructurecounter[\s!userpage]\relax}

\let\savenofpages\relax

% States:

\newif\ifrightpage    \rightpagetrue
\newif\ifdoublesided
\newif\ifsinglesided

% Real page numbers:

\def\gotonextrealpage
  {\global\realpageno\incrementedstructurecounter[\s!realpage]\relax
   \ifnum\realpageno>\lastpage
     \xdef\lastpage{\realfolio}%
   \fi
   \setpagereference\v!firstpage\firstpage
   \setpagereference\v!lastpage\lastpage
   \ifnum\realpageno>\plusone
     \xdef\prevpage{\the\numexpr\realpageno+\minusone}%
     \setpagereference\v!backward\prevpage
   \else
     \global\let\prevpage\firstpage
     \setpagereference\v!backward\lastpage
   \fi
   \setpagereference\v!previouspage\prevpage
   \ifnum\realpageno<\lastpage\relax
     \xdef\nextpage{\the\numexpr\realpageno+\plusone}%
     \setpagereference\v!page\nextpage
     \setpagereference\v!forward\nextpage
     \glet\nextnextpage\nextpage
     \ifodd\nextpage\relax
       \setpagereference\v!nextoddpage\nextnextpage
     \else
       \setpagereference\v!nextevenpage\nextnextpage
     \fi
     \xdef\nextnextpage{\the\numexpr\realpageno+\plustwo}%
     \ifnum\nextnextpage>\lastpage\else
       \ifodd\nextnextpage\relax
         \setpagereference\v!nextoddpage\nextnextpage
       \else
         \setpagereference\v!nextevenpage\nextnextpage
       \fi
     \fi
   \else
     \glet\nextpage\lastpage
     \setpagereference\v!page\firstpage
     \setpagereference\v!forward\firstpage
     \setpagereference\v!nextoddpage\lastpage
     \setpagereference\v!nextevenpage\lastpage
   \fi
   \setpagereference\v!nextpage\realfolio}

% Pagenumbers:

\def\dodecrementpagenumber{\global\userpageno\decrementedstructurecounter[\s!userpage]\relax\global\pageno\userpageno}
\def\doincrementpagenumber{\global\userpageno\incrementedstructurecounter[\s!userpage]\relax\global\pageno\userpageno}

\def\dosynchronizepagenumber{\global\let\@@pnstate\v!start}

\def\decrementpagenumber{\getvalue{\??pn-\structurecounterparameter\s!userpage\c!state}}
\def\incrementpagenumber{\getvalue{\??pn+\structurecounterparameter\s!userpage\c!state}}

\letvalue{\??pn-\v!start}\dodecrementpagenumber
\letvalue{\??pn-\v!none }\dodecrementpagenumber
\letvalue{\??pn-\v!empty}\dodecrementpagenumber

\letvalue{\??pn+\v!start}\doincrementpagenumber
\letvalue{\??pn+\v!none }\doincrementpagenumber
\setvalue{\??pn+\v!empty}{\doincrementpagenumber\dosynchronizepagenumber}
\letvalue{\??pn+\v!keep }\dosynchronizepagenumber

% todo: check if number set, and reset it after testing; also take care of \global\shiftedrealpagenotrue

% Subpagenumbers:

\def\gotonextsubpage
  {\global\subpageno\incrementedstructurecounter[\s!subpage]\relax
   \ifnum\subpageno>\lastsubpage
     \xdef\lastsubpage{\subfolio}%
   \fi
   \setpagereference\v!firstsubpage\firstsubpage
   \setpagereference\v!lastsubpage\lastsubpage
   \ifnum\subpageno>\plusone
     \xdef\prevsubpage{\the\numexpr\subpageno+\minusone}%
     \setpagereference\v!subbackward\prevsubpage
   \else
     \global\let\prevsubpage\firstsubpage
     \setpagereference\v!subbackward\lastsubpage
   \fi
   \setpagereference\v!previoussubpage\prevsubpage
   \ifnum\subpageno<\lastsubpage\relax
     \xdef\nextsubpage{\the\numexpr\subpageno+\plusone}%
     \setpagereference\v!subpage\nextsubpage
     \setpagereference\v!subforward\nextsubpage
     \glet\nextnextpage\nextsubpage
     \xdef\nextnextpage{\the\numexpr\subpageno+\plustwo}%
   \else
     \glet\nextsubpage\lastsubpage
     \setpagereference\v!subpage\firstsubpage
     \setpagereference\v!subforward\firstsubpage
   \fi
   \setpagereference\v!nextsubpage\subfolio}

% Control:

\def\getpagestatus % hierboven gebruiken
  {\ifdoublesided
     \global\rightpagetrue
     % todo: \global\rightpagetrue or \global\rightpagefalse
   \else
     \global\rightpagetrue
   \fi}

% Setup general page numbering

\newtoks\everysetuppagenumbering

\def\setuppagenumbering
  {\dosingleempty\dosetuppagenumbering}

\def\dosetuppagenumbering[#1]%
  {\getparameters[\??nm][#1]\the\everysetuppagenumbering}

\appendtoks
   \singlesidedfalse
   \doublesidedfalse
   \ExpandFirstAfter\processallactionsinset
     [\@@nmalternative]
     [ \v!singlesided=>\singlesidedtrue,
       \v!doublesided=>\doublesidedtrue]%
   \ifx\trackingmarginnotestrue\undefined\else
     \ifdoublesided
       \trackingmarginnotestrue
     \else
       \trackingmarginnotesfalse
     \fi
   \fi
   \dosetpagenumberlocation
\to \everysetuppagenumbering

\appendtoks
   \ifdefined \recalculatebackgrounds \recalculatebackgrounds \fi
\to \everysetuppagenumbering

% The numbered location handler is there because we need to be downward
% compatible. So, in fact there can be multiple handlers active at the
% same time, but only the current one does something.
%
% thsi code might move to page-txt

\newcount\currentpagenumberlocation

\def\dosetpagenumberlocation
  {\advance\currentpagenumberlocation\plusone
   \ifx\@@nmlocation\empty \else
     \let\@@pagenumbervlocation\v!footer
     \let\@@pagenumberhlocation\v!text
     \let\@@pagenumberxlocation\c!middletext
     \normalexpanded{\noexpand\processallactionsinset[\@@nmlocation]}
       [    \v!header=>\let\@@pagenumbervlocation\v!header,
            \v!footer=>\let\@@pagenumbervlocation\v!footer,
            \v!middle=>\let\@@pagenumberhlocation\v!text  \let\@@pagenumberxlocation\c!middletext,
              \v!left=>\let\@@pagenumberhlocation\v!text  \let\@@pagenumberxlocation\c!lefttext,
             \v!right=>\let\@@pagenumberhlocation\v!text  \let\@@pagenumberxlocation\c!righttext,
            \v!inleft=>\let\@@pagenumberhlocation\v!margin\let\@@pagenumberxlocation\c!lefttext,
           \v!inright=>\let\@@pagenumberhlocation\v!margin\let\@@pagenumberxlocation\c!righttext,
          \v!inmargin=>\let\@@pagenumberhlocation\v!margin\def\@@pagenumberxlocation{\ifdoublesided\c!margintext\else\c!righttext\fi},
            \v!margin=>\let\@@pagenumberhlocation\v!margin\def\@@pagenumberxlocation{\ifdoublesided\c!margintext\else\c!righttext\fi},
          \v!atmargin=>\let\@@pagenumberhlocation\v!text  \let\@@pagenumberxlocation\c!marginedgetext,
        \v!marginedge=>\let\@@pagenumberhlocation\v!text  \let\@@pagenumberxlocation\c!marginedgetext]%
     \normalexpanded{\noexpand\setspecificlayouttext
        {\@@pagenumbervlocation}{\@@pagenumberhlocation}{\@@pagenumberxlocation}%
        {\noexpand\doplacepagenumberatlocation{\number\currentpagenumberlocation}}}%
   \fi}

\def\setspecificlayouttext#1#2#3#4{\setvalue{\??tk#1#2#3}{#4}} % weird place

\appendtoks
    \dosetpagenumberlocation
\to \everyinitializepagecounters

\def\doplacepagenumberatlocation#1%
  {\ifnum#1=\currentpagenumberlocation\relax\expandafter\placelocationpagenumber\fi}

% Rendering:

\unexpanded\def\placelocationpagenumber
  {\ifnum\userpagenumberstate=\plustwo
     \ifnum\overallpagenumberstate=\plusone
        \doif\@@nmstrut\v!yes\strut
        \@@nmcommand{\doattributes\??nm\c!style\c!color{\@@nmleft\labeltexts\v!pagenumber{\prefixedpagenumber}\@@nmright}}%
     \fi
   \fi}

\unexpanded\def\completepagenumber
  {\ifnum\userpagenumberstate=\plustwo
     \ifnum\overallpagenumberstate=\plusone
        \@@nmleft\labeltexts\v!pagenumber\prefixedpagenumber\@@nmright
     \fi
   \fi}

\unexpanded\def\placepagenumber
  {\ifnum\userpagenumberstate=\plustwo
     \ifnum\overallpagenumberstate=\plusone
        \labeltexts\v!pagenumber\pagenumber
     \fi
   \fi}

\unexpanded\def\referencepagenumber[#1]%
  {\doifelsenothing{#1}{?}{}}

% The numbered location handler is there because we need to be downward
% compatible. So, in fact there can be multiple handlers active at the
% same time, but only the current one does something.

\chardef\realpagenumberstate   =2 % counter state : 0=stop, 1=start, 2=start and visible
\chardef\userpagenumberstate   =2 % counter state : 0=stop, 1=start, 2=start and visible
\chardef\subpagenumberstate    =2 % counter state : 0=stop, 1=start, 2=start and visible
\chardef\overallpagenumberstate=1 % general number: 0=invisible, 1=visible

\def\checkpagenumberstatechange#1#2%
  {\edef\newpagenumberstate{\structurecounterparameter#1\c!state}%
   \ifx\newpagenumberstate\oldpagenumberstate \else
     \doifelse\newpagenumberstate\v!start
         {\chardef#2\plustwo}%
         {\chardef#2\zerocount}%
   \fi}

\appendtoks % todo: set state: none, start, stop, reset
    \checkpagenumberstatechange\s!realpage\realpagenumberstate
\to \everysetuprealpagenumber

\appendtoks % todo: set state: none, start, stop, reset
    \checkpagenumberstatechange\s!userpage\userpagenumberstate
\to \everysetupuserpagenumber

\appendtoks % todo: set state: none, start, stop, reset
    \checkpagenumberstatechange\s!subpage\subpagenumberstate
\to \everysetupsubpagenumber

\appendtoks % todo: set state: none, start, stop, reset
    \doifelse\@@nmstate\v!start
        {\chardef\overallpagenumberstate\plusone}%
        {\chardef\overallpagenumberstate\zerocount}%
\to \everysetuppagenumbering

% \appendtoks % todo: set state: none, start, stop, reset
%    % this makes starting at an even page possible
%    \ifnum\realpageno=1 \ifodd\pageno \else
%      \global\shiftedrealpagenotrue
%    \fi \fi
% \to \everysetupuserpagenumber

% Done

% \c!way=\v!by\v!part
% \c!text=
% \v!chapter\v!number=\v!no
% \v!part\v!number=\v!yes
% \c!numberseparator=--
% \c!conversion=\v!numbers

\setuppagenumbering
  [\c!alternative=\v!singlesided,
   \c!location={\v!header,\v!middle},
   \c!width=, % in geval van \v!marginedge
   \c!left=,
   \c!right=,
   \c!textseparator=\tfskip,
   \c!state=\v!start,
   \c!command=,
   \c!strut=\v!yes,
   \c!style=, % empty, otherwise conflict
   \c!color=]

% just for downward compatbility

\appendtoks
    \edef\askeduserpagenumber{\structurecounterparameter\s!userpage\c!number}%
    \ifx\askeduserpagenumber\empty \else
      \normalexpanded{\noexpand\setuppagenumber[\c!start=\structurecounterparameter\s!userpage\c!number,\c!number=]}%
      \userpageno\rawstructurecounter[\s!userpage]%
    \fi
\to \everysetupuserpagenumber % todo: set state: none, start, stop, reset

% \setuplayout[width=300pt,backspace=4cm]
% \setuppagenumbering [alternative=doublesided]
% \setupuserpagenumber[start=2]
% \starttext \dorecurse{20}{\input knuth \par} \stoptext

\def\checkpagenumbershift
  {\userpageno\rawstructurecounter[\s!userpage]\relax
   \ifnum\realpageno=\plusone
        \ifodd\userpageno
        \else
            \global\shiftedrealpagenotrue
        \fi
   \fi}

\appendtoks % todo: set state: none, start, stop, reset
    % this makes starting at an even page possible
    \checkpagenumbershift
\to \everysetupuserpagenumber

\appendtoks % todo: set state: none, start, stop, reset
    % this makes starting at an even page possible
    \checkpagenumbershift
\to \everysetuppagenumbering

\initializepagecounters

\protect \endinput
